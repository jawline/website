[{"title": "[Paper] ExpoSE: Practical Symbolic Execution of Standalone JavaScript", "id": "expose_practical_symbex", "date": "2017", "create_date": 1533825900, "tags": ["research", "papers"], "human_time": "2018-08-09 14:45:00", "desc": ""}, {"title": "Analyzing modern (ES6) JavaScript with Jalangi2", "id": "es6jalangi", "date": "2018", "create_date": "1533825900", "tags": ["research"], "human_time": "2018-08-09 14:45:00", "desc": "<p>As part of a recent piece of work with ExpoSE we found that Jalangi2 often fails to analyze JavaScript programs which use features from recent JavaScript standards. In particular, a common point of failure is the use of <b>let</b> or <b>const</b> keywords. As such, we were unable to analyze a large number of the libraries we downloaded from the <b>NPM</b> package manager.</p>"}, {"title": "ExpoSE", "id": "expose", "date": "2015 onward", "create_date": 1533825900, "tags": ["projects", "research", "papers"], "human_time": "2018-08-09 14:45:00", "desc": "<p>ExpoSE is a dynamic symbolic execution (DSE) tool for JavaScript with support for asynchronous events, strings, and complex regular expressions (including capture groups). It also supports concurrent test-case execution and provides detailed coverage statistics.</p>"}]